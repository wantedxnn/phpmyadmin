name: Generate snapshot with cleanup

on:
  pull_request:
    paths:
      - '.github/workflows/daily-snapshots.yml'
      - 'bin/**'
  workflow_dispatch: # Allows manual triggering from the GitHub UI

permissions:
  contents: read
  actions: write # Required for the cleaning functionality

jobs:
  clean_runs:
    name: Clean up old workflow runs
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Delete All Completed Workflow Runs
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            console.log(`Attempting to delete ALL completed workflow runs for ${owner}/${repo}`);

            let page = 1;
            let runsDeleted = 0;
            let hasMorePages = true;

            while (hasMorePages) {
              const { data: { workflow_runs } } = await github.rest.actions.listWorkflowRunsForRepo({
                owner,
                repo,
                per_page: 100, // Max per page
                page,
                status: 'completed' // Only consider completed runs for deletion
              });

              if (workflow_runs.length === 0) {
                hasMorePages = false;
                break;
              }

              for (const run of workflow_runs) {
                // Skip current run to avoid deleting itself
                if (run.id === context.runId) continue;
                
                console.log(`Deleting workflow run ID: ${run.id}, Name: ${run.name}, Created At: ${run.created_at}`);
                try {
                  await github.rest.actions.deleteWorkflowRun({
                    owner,
                    repo,
                    run_id: run.id
                  });
                  runsDeleted++;
                } catch (error) {
                  console.error(`Failed to delete workflow run ID: ${run.id}. Error: ${error.message}`);
                }
              }

              if (workflow_runs.length < 100) {
                hasMorePages = false; // No more runs on this page, so no more pages
              } else {
                page++;
              }
            }

            console.log(`Successfully deleted ${runsDeleted} workflow runs.`);

  generate-snapshots:
    name: Generate ${{ matrix.version }} snapshots
    runs-on: ubuntu-latest
    needs: clean_runs
    if: (github.event_name == 'schedule' && github.repository == 'phpmyadmin/phpmyadmin') || (github.event_name != 'schedule')
    strategy:
      fail-fast: false
      matrix:
        include:
          - { version: '6.0', branch: 'master', php-version: '8.3', node-version: '22', python-version: '3.11' }
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Install Gettext
        run: sudo apt-get install -y gettext

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, iconv, mysqli, zip, gd
          coverage: none

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      - name: Install Yarn modules
        run: yarn install --non-interactive

      - name: Install Sphinx for the documentation build
        run: pip install 'Sphinx'

      - name: Build the release
        if: matrix.branch == 'master'
        run: ./bin/internal/create-release.sh --daily ${{ matrix.version }}+snapshot ${{ matrix.branch }}

      - name: Build the release
        if: matrix.branch != 'master'
        run: ./scripts/create-release.sh --daily ${{ matrix.version }}+snapshot ${{ matrix.branch }}

      - name: Check release excludes
        if: matrix.branch == 'master'
        run: ./bin/internal/check-release-excludes.sh release/phpMyAdmin-${{ matrix.version }}+snapshot-all-languages.tar.gz
        continue-on-error: true

      - name: Check release excludes
        if: matrix.branch != 'master'
        run: ./scripts/check-release-excludes.sh release/phpMyAdmin-${{ matrix.version }}+snapshot-all-languages.tar.gz
        continue-on-error: true

      - name: Upload snapshots
        uses: actions/upload-artifact@v4
        with:
          name: phpMyAdmin-${{ matrix.version }}-snapshots
          path: release/*
          retention-days: 1
